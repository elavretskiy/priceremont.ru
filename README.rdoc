== Heroku
https://mighty-cove-71295.herokuapp.com

== Задание
К проекту необходимо прикрутить систему аутентификации. То есть, чтобы пользователь мог регистрироваться на проекте, логиниться и делать «выход из проекта». Можно использовать любое из понравившихся решений.

Сделать возможность создавать, просматривать, редактировать и удалять посты. Главная страница проекта должна представлять собой список всех постов, отсортированных по дате создания по убыванию, то есть самые свежие посты наверху. При редактировании имеется возможность изменить дату создания.

Делаем, чтобы посты мог создавать только зарегистрированный пользователь. Информацию об авторе поста следует добавить на главную страницу с постами. Необходимо настроить, чтобы редактирование и удаление постов делал только владелец этого поста. Добавить страницу “Мои посты” и разместить соответсвующую ссылку на главную страницу.

К постам необходимо прикрутить пагинатор. И настроить постраничный вывод постов на главной странице проекта (количество постов на одной странице установить равным 5)

Необходимо добавить возможность комментировать посты. Т.е. пользователи должны иметь возможность оставить комментарии к посту.

Настроить возможность редактирования/удаления своих комментариев. Комментарий можно удалить и редактировать только первые 15 минут после написания.

Пост может быть опубликованным или не опубликованным. Создаваемый пост сразу же публикуется. У пользователя есть возможность отменить автоматическую публикацию, установив соответсвующий флажок при создании. На главной выводим только опубликованные посты.

Теги. Сделать, чтобы на главной странице проекта строилось облако тегов, т. е. посты поддерживали возможность тегирования. При клике на определенном теге мы должны переходить на страницу со списком постов отвечающих данному тегу.

Дополнительно 1: по возможности обеспечить тестовое покрытие проекта.

Дополнительно 2: в рамках этой же задачи реализовать все механизмы ООП (показать, назвать, расставить комментарии). 

Дополнительно 3: показать пример использования threads, так же сделать замер по производительности с помощью benchmark и вывести результат на view.

Код можно выложить на github, в ReadMe указать как развернуть. К верстке и дизайну нет требований. Постараться использовать как можно больше интересных решений (например концерны, модули, декораторы и тд) - важен не сам блог, а качество его исполнения по коду, ход мыслей и так далее.
Время явно не регламентируется, но ожидаем фидбэк в течение 2/3 дней.
